module simpl

imports
  Common

context-free start-symbols
  Prog

context-free syntax
  Prog.Program = Exp

context-free syntax
  
  Exp.Lit   = <<INT>>
  Exp.Plus  = <<Exp> + <Exp>> {left}
  Exp.Minus = <<Exp> - <Exp>> {left}
  Exp.Times = <<Exp> * <Exp>> {left}

  Exp = <(<Exp>)> {bracket}
  
context-free syntax

  Exp.Let = <let <ID> = <Exp> in <Exp>> {non-assoc}
    
  Exp.Var = <<ID>> 

context-free syntax

  Exp.Box = <box(<Exp>)>
  Exp.Unbox = <unbox(<Exp>)>
  Exp.Setbox = <setbox(<Exp>, <Exp>)>

context-free syntax

  Exp.Fun = [[ID] -> [Exp]]
  Exp.App = <<Exp>(<Exp>)> {left}

context-free syntax
  Exp.Ifz = <ifz <Exp> then <Exp> else <Exp>>

context-free syntax
      
  Exp.Block = <{ <{Exp ";"}*> }>

context-free syntax
  
  Exp.String = <<STRING>>
  Exp.Match = <<Exp> ? <Exp>>
  
  Exp.ExpRegex = <[<Regex>]>
  
  Regex.Epsilon = EPSI
  Regex.Char = <<CHAR>>
  
  Regex.Seq  = <<Regex><Regex>> {left}
  
  Regex.Group = <(<Regex>)>
  Regex.Alt  = <(<Regex> | <Regex>)>
  Regex.Kleene = <<Regex>*>

context-free priorities

  Exp.Block
  >
  {left:
    Exp.App
  } >
  {left:
    Exp.Times
  } >
  {left:
    Exp.Plus
    Exp.Minus
  } >
    Exp.Fun
  >
  {non-assoc:
    Exp.Let
  }
  > Regex.Kleene > Regex.Seq
  


