module trans/simpl

imports
  src-gen/ds-signatures/simpl-sig
  trans/runtime/runtime
  
signature
  constructors
    NumV: Int -> V

  arrows
    Exp --> V
  
  native operators
    parseI: String -> Int
    addI: Int * Int -> Int
    subI: Int * Int -> Int
    mulI: Int * Int -> Int
    
rules
  
  Lit(s) --> NumV(parseI(s)).
  
  Plus(NumV(i1), NumV(i2)) --> NumV(addI(i1, i2)).
  
  Minus(NumV(i1), NumV(i2)) --> NumV(subI(i1, i2)).
  
  Times(NumV(i1), NumV(i2)) --> NumV(mulI(i1, i2)).


rules
  Let(x, v1, e2) --> v2
  where
    Env bindVar(x, v1) |- e2 --> v2.
  
  Var(x) --> readVar(x).

signature
  constructors
    BoxV: Int -> V

rules
  Box(v) --> BoxV(allocate(v)).
  
  Unbox(BoxV(addr)) --> read(addr).
  
  Setbox(BoxV(addr), v) --> write(addr,v).

signature
  constructors
    ClosV: String * Exp * Env -> V

rules
  E |- Fun(x, e) --> ClosV(x, e, E).
  
  App(ClosV(x, e, E), v1) --> v2
  where
    E  |- bindVar(x, v1) --> E';
    E' |- e --> v2.




